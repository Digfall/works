import re

def is_valid_color(color):
    """
    Проверяет, является ли входная строка корректным web-цветом.

    Ограничения на цвета:
    • rgb: rgb(r, g, b), где «r, g, b» - это комбинация из трёх целых чисел (от 0 до 255) или трёх процентных значений (от 0% до 100%), перечисленных через запятую.
    • hex (шестнадцатеричный код цвета, #rrggbb) – это шестизначное представление цвета в RGB пространстве.
    Первые две цифры (rr) – представляют собой красное значение, следующие две – зелёное значение (gg), а последние – синее значение (bb).
    Перед значениями каналов предшествует символ #. Также допускается сокращённый вид записи – по одной цифре – #rgb
    • hsl (тон, насыщенность и светлота, hsl(h, s, l)) - записывается похожим на rgb формат образом.
    Тон – целое число в диапазоне от 0 до 360, насыщенность и светлота- целочисленные процентные значения.

    >>> is_valid_color("#21f48D")
    True
    >>> is_valid_color("#888")
    True
    >>> is_valid_color("rgb(255, 255,255)")
    True
    >>> is_valid_color("rgb(10%, 20%, 0%)")
    True
    >>> is_valid_color("hsl(200,100%,50%)")
    True
    >>> is_valid_color("hsl(0, 0%, 0%)")
    True

    >>> is_valid_color("#2345")
    False
    >>> is_valid_color("ffffff")
    False
    >>> is_valid_color("rgb(257, 50, 10)")
    False
    >>> is_valid_color("hsl(20, 10, 0.5)")
    False
    >>> is_valid_color("hsl(30%, 20%, 150%)")
    False
    """
    regex = (
        r"^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$" 
        r"|rgb\((25[0-5]|2[0-4]\d|1\d{1,2}|\d{1,2})%?,\s?(25[0-5]|2[0-4]\d|1\d{1,2}|\d{1,2})%?,\s?(25[0-5]|2[0-4]\d|1\d{1,2}|\d{1,2})%?\)$"  
        r"|hsl\((360|3[0-5]\d|[12]\d{1,2}|\d{1,2})%?,\s?(100|[1-9]\d|\d)%?,\s?(100|[1-9]\d|\d)%?\)$"
    )

    return bool(re.match(regex, color))

if __name__ == "__main__":
    import doctest
    doctest.testmod()
